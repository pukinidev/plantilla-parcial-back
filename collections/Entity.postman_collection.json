{
	"info": {
		"_postman_id": "ddaec018-c1d6-498d-8b6a-1bffc90d59e1",
		"name": "Entity",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23349476"
	},
	"item": [
		{
			"name": "Add an Entity",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()",
							"pm.globals.set(\"entity_id\", data.id);",
							"",
							"pm.test(\"Status code is 201\", function () {",
							"   pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/pluralentity",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"pluralentity"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all Entities",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Number of entities > ' + 0, function () {",
							"   var data = pm.response.json()",
							"   pm.expect(data.length).to.greaterThan(0)",
							"});",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"   pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/entities",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"entities"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get one Entity",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"   pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/entities/{{valid_entity_ID}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"entities",
						"{{valid_entity_ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get an invalid Entity",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"   pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Get expected error message\", function () {",
							"   var data = pm.response.json();",
							"   pm.expect(data.message).to.eql(\"Entity not found\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/entities/{{invalid_entity_ID}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"entities",
						"{{invalid_entity_ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update an Entity",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"   pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/entities/{{valid_entity_ID}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"entities",
						"{{valid_entity_ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update an Invalid Entity",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"   pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Get expected error message\", function () {",
							"   var data = pm.response.json();",
							"   pm.expect(data.message).to.eql(\"Entity not found\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/entities/{{invalid_entity_ID}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"entities",
						"{{invalid_entity_ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete an Entity",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {",
							"   pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/entities/{{valid_entity_ID}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"entities",
						"{{valid_entity_ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete an Invalid Entity",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"   pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Get expected error message\", function () {",
							"   var data = pm.response.json();",
							"   pm.expect(data.message).to.eql(\"Entity not found\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/airlines/{{invalid_airline_ID}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"airlines",
						"{{invalid_airline_ID}}"
					]
				}
			},
			"response": []
		}
	]
}